This is just a quick & dirty hack. Healthchecks assumes that username is
in format of email address. You can configure LDAP authentication backend
to use e.g. uid as username instead of email address. However, various
forms will not work because of validation.

This patch fixes just the login form, not other forms (e.g. adding user
to team).

--- a/hc/accounts/forms.py
+++ b/hc/accounts/forms.py
@@ -1,6 +1,7 @@
 from datetime import timedelta as td
 from django import forms
 from django.contrib.auth.models import User
+import unicodedata


 class LowercaseEmailField(forms.EmailField):
@@ -15,6 +15,21 @@
     password = forms.CharField(required=False)


+class UsernameField(forms.CharField):
+
+    def clean(self, value):
+        value = super(forms.CharField, self).clean(value)
+        return value.lower()
+
+    def to_python(self, value):
+        return unicodedata.normalize('NFKC', super().to_python(value))
+
+
+class LoginForm(forms.Form):
+    identity = UsernameField(required=True)
+    password = forms.CharField(required=False)
+
+
 class ReportSettingsForm(forms.Form):
     reports_allowed = forms.BooleanField(required=False)
     nag_period = forms.IntegerField(min_value=0, max_value=86400)
--- a/hc/accounts/views.py
+++ b/hc/accounts/views.py
@@ -14,7 +14,7 @@
 from django.shortcuts import redirect, render
 from django.utils.timezone import now
 from django.views.decorators.http import require_POST
-from hc.accounts.forms import (ChangeEmailForm, EmailPasswordForm,
+from hc.accounts.forms import (ChangeEmailForm, LoginForm,
                                InviteTeamMemberForm, RemoveTeamMemberForm,
                                ReportSettingsForm, SetPasswordForm,
                                TeamNameForm)
@@ -60,7 +60,7 @@
 def login(request, show_password=(not settings.REGISTRATION_OPEN)):
     bad_credentials = False
     if request.method == 'POST':
-        form = EmailPasswordForm(request.POST)
+        form = LoginForm(request.POST)
         if form.is_valid():
             email = form.cleaned_data["identity"]
             password = form.cleaned_data["password"]
@@ -87,7 +87,7 @@
                     return redirect("hc-login-link-sent")

     else:
-        form = EmailPasswordForm()
+        form = LoginForm()

     bad_link = request.session.pop("bad_link", None)
     ctx = {
--- a/templates/accounts/login.html
+++ b/templates/accounts/login.html
@@ -16,7 +16,7 @@
             <div class="dialog-body">
                 <p>
                 {% if show_password %}
-                    Please enter your email address and password.
+                    Please enter your username or email address and password.
                 {% else %}
                     Please enter your email address.
                     Next, we'll send you an email with log-in instructions!
@@ -26,7 +26,7 @@
             {% endif %}

             {% if bad_credentials %}
-            <p class="alert alert-danger">Incorrect email or password.</p>
+            <p class="alert alert-danger">Incorrect username/email or password.</p>
             {% endif %}

             <form method="post">
@@ -42,7 +42,7 @@
                             class="form-control"
                             name="identity"
                             value="{{ form.identity.value|default:"" }}"
-                            placeholder="you@example.org">
+                            placeholder="username or email">
                     </div>
                 </div>

