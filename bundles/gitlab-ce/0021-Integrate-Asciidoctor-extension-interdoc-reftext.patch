From 38198c3a069f584cab450ed785032501a694605a Mon Sep 17 00:00:00 2001
From: Jakub Jirutka <jakub@jirutka.cz>
Date: Tue, 30 Jan 2018 20:29:40 +0100
Subject: [PATCH 21/25] Integrate Asciidoctor extension interdoc-reftext

---
 Gemfile                |  1 +
 Gemfile.lock           |  3 +++
 lib/gitlab/asciidoc.rb | 27 +++++++++++++++++++++++++++
 3 files changed, 31 insertions(+)

diff --git a/Gemfile b/Gemfile
index 5c21352..fd0ff1d 100644
--- a/Gemfile
+++ b/Gemfile
@@ -131,6 +131,7 @@ gem 'asciidoctor', '~> 1.5.6.2'
 gem 'asciidoctor-html5s', '= 0.1.0.beta.5'
 gem 'asciidoctor-plantuml', '0.0.7'
 gem 'asciidoctor-include-ext', '~> 0.1.1', require: false
+gem 'asciidoctor-interdoc-reftext', '~> 0.1.0', require: false
 gem 'asciidoctor-rouge', '~> 0.2.0', require: false
 gem 'rouge', '~> 2.0'
 gem 'truncato', '~> 0.7.9'
diff --git a/Gemfile.lock b/Gemfile.lock
index 3fcdc4e..0510fe2 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -67,6 +67,8 @@ GEM
       thread_safe (~> 0.3.4)
     asciidoctor-include-ext (0.1.1)
       asciidoctor (~> 1.5.6)
+    asciidoctor-interdoc-reftext (0.1.0)
+      asciidoctor (~> 1.5.6)
     asciidoctor-plantuml (0.0.7)
       asciidoctor (~> 1.5)
     asciidoctor-rouge (0.2.0)
@@ -1004,6 +1006,7 @@ DEPENDENCIES
   asciidoctor (~> 1.5.6.2)
   asciidoctor-html5s (= 0.1.0.beta.5)
   asciidoctor-include-ext (~> 0.1.1)
+  asciidoctor-interdoc-reftext (~> 0.1.0)
   asciidoctor-plantuml (= 0.0.7)
   asciidoctor-rouge (~> 0.2.0)
   asset_sync (~> 2.2.0)
diff --git a/lib/gitlab/asciidoc.rb b/lib/gitlab/asciidoc.rb
index ca30dd0..568f49b 100644
--- a/lib/gitlab/asciidoc.rb
+++ b/lib/gitlab/asciidoc.rb
@@ -3,6 +3,7 @@ require 'asciidoctor/extensions'
 require 'asciidoctor-html5s'
 require "asciidoctor-plantuml"
 require 'asciidoctor/include_ext/include_processor'
+require 'asciidoctor/interdoc_reftext/processor'
 require 'asciidoctor/rouge/treeprocessor'
 
 module Gitlab
@@ -34,6 +35,11 @@ module Gitlab
 
       extensions = proc do
         include_processor GitlabIncludeProcessor.new(repository_tree)
+
+        tree_processor ::Asciidoctor::InterdocReftext::Processor.new(
+          resolver_class: GitlabInterdocReftextResolver,
+          repository_tree: repository_tree
+        )
       end
 
       asciidoc_opts = { safe: :server,
@@ -198,5 +204,26 @@ module Gitlab
         reader.unshift_line("*[ERROR: include::#{target}[] - unresolved directive]*")
       end
     end
+
+    # Resolver of implicit reference text (label) for inter-document cross references.
+    class GitlabInterdocReftextResolver < Asciidoctor::InterdocReftext::Resolver
+      # Overrides super class method.
+      def initialize(document, repository_tree:, **)
+        super(document, logger: Gitlab::AppLogger, raise_exceptions: false)
+        @repository_tree = repository_tree
+      end
+
+      protected
+
+      # Overrides super class method.
+      def resolve_target_path(target_path)
+        @repository_tree.resolve_file_path(target_path + '.adoc')
+      end
+
+      # Overrides super class method.
+      def read_file(filename)
+        @repository_tree.read_file(filename).try(:each_line)
+      end
+    end
   end
 end
-- 
2.10.1 (Apple Git-78)

