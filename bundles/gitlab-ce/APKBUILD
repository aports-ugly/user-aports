# Contributor: Jakub Jirutka <jakub@jirutka.cz>
# Maintainer: Jakub Jirutka <jakub@jirutka.cz>
pkgname=gitlab-ce
_pkgname=${pkgname%-ce}
pkgver=8.7.6
pkgrel=1
pkgdesc="A version control for your server"
url="https://github.com/gitlabhq/gitlabhq"
arch="all"
license="MIT"
_rubyslot=2.1
depends="$pkgname-assets ca-certificates git>=2.7.3 gitlab-shell>=2.7.2
	gitlab-workhorse>=0.7.1 http-parser libgit2>=0.24 procps redis>=2.8 tzdata
	ruby$_rubyslot ruby$_rubyslot-io-console ruby$_rubyslot-bigdecimal
	ruby$_rubyslot-json ruby$_rubyslot-rake ruby$_rubyslot-bundler
	"
makedepends="icu-dev libgit2-dev>=0.24 libxml2-dev libxslt-dev linux-headers
	openssl-dev postgresql-dev>=9.1 nodejs ruby$_rubyslot-dev
	"
pkgusers="git"
pkggroups="git"
install="$pkgname.pre-install $pkgname.post-install $pkgname.post-upgrade"
subpackages="$pkgname-assets $pkgname-doc"
source="$pkgname-$pkgver.tar.gz::https://github.com/gitlabhq/gitlabhq/archive/v$pkgver.tar.gz
	$_pkgname.initd
	$_pkgname.mailroom.initd
	$_pkgname.sidekiq.initd
	$_pkgname.confd
	$_pkgname.logrotate
	gitlab-rake
	0001-Gemfile.patch
	0002-default-configs.patch
	0003-change-secret_token-path.patch
	0004-fix-setup-task.patch
	0005-fix-check-task.patch
	0006-fix-hardcoded-path.patch
	0007-add-mathjax-support.patch
	0008-fix-asciidoc-headers.patch
	"
builddir="$srcdir/gitlabhq-$pkgver"

_prefix="/usr/lib/bundles/$_pkgname"

prepare() {
	default_prepare || return 1  # apply patches

	cd "$builddir"

	# Change shebang to run with correct Ruby version.
	local file; for file in bin/bundle bin/rails bin/rake; do
		sed -i "s|/usr/bin/env ruby|/usr/bin/env ruby$_rubyslot|" $file || return 1
	done
	sed -i "s|/usr/bin/env rake|/usr/bin/env rake$_rubyslot|" Rakefile || return 1

	# The default log level is very chatty.
	sed -i 's/^\(\s*config.log_level\s*=\).*$/\1 :warn/' \
		config/environments/production.rb || return 1

	# This is not needed, the secret_token is generated by the
	# gitlab-shell package. It also makes problems in the build phase.
	rm config/initializers/gitlab_shell_secret_token.rb
}

build() {
	local bundle="bundle$_rubyslot"
	local cpus="$(grep -c ^processor /proc/cpuinfo || echo 1)"
	local bundle_opts="--deployment --jobs=$cpus --no-cache
		--without auth-ext aws development kerberos metrics mysql test"

	cd "$builddir"

	echo "Installing Ruby gems..."

	$bundle config build.nokogiri --use-system-libraries
	$bundle config build.rugged --use-system-libraries

	$bundle $bundle_opts || return 1

	echo "Compiling assets..."

	# Since we have moved assets gems into a group, they are not implicitly
	# loaded by default. This will be reverted after compiling assets.
	sed -i.bak '/Bundler.require(:default, Rails.env/s/)/, :assets)/' \
		config/application.rb || return 1

	# assets:precompile bootstraps the app, so it needs a config file.
	cp config/gitlab.yml.example config/gitlab.yml || return 1

	# The configured path is not readable for the user building
	# the package, so we must remove it; GitLab will use the default path.
	sed -i '/^\s*secret_file:.*/d' config/gitlab.yml || return 1

	# We must set database URL, but it's not needed to be actually
	# accessible, so just provide some dummy URL.
	DATABASE_URL="postgres://user:pass@127.0.0.1/dummy" \
		SECRET_KEY_BASE="top-secret" \
		RAILS_ENV=production \
		$bundle exec rake assets:precompile || return 1

	mv config/application.rb.bak config/application.rb || return 1

	echo "Cleaning assets gems..."

	$bundle $bundle_opts assets --clean || return 1

	# Create executables in bin/*.
	$bundle binstubs --force mail_room sidekiq unicorn || return 1

	# When GitLab executes a system command, it leaks some Bundler
	# env. variables. The problem may occur when it execute a Ruby script
	# with shebang "/usr/bin/env ruby"; Bundler tries to initialize GitLab
	# environments, but due to different Ruby versions it doesn't see its
	# gems. The workaround is to symlink ruby -> ruby2.1 to $_prefix/bin
	# and add it to the PATH.
	local file; for file in bin/*; do
		[ -f $file ] || continue
		# Add text after the first line of the file.
		sed -i "1a ENV['PATH'] = \"#{__dir__}:#{ENV['PATH']}\"" $file || return 1
	done

	# Cleanup
	rm config/gitlab.yml config/secrets.yml
	rm -R vendor/bundle/ruby/*/cache/
	rm -R vendor/bundle/ruby/*/build_info
}

package() {
	local destdir="${pkgdir}$_prefix"
	local datadir="$pkgdir/var/lib/gitlab"
	local file

	cd "$builddir"

	install -d -m755 "$destdir" "$destdir"/bin

	install -d -m755 -o git -g git \
		"$datadir" \
		"$pkgdir"/etc/gitlab \
		"$pkgdir"/var/log/gitlab || return 1

	install -d -m700 -o git -g git \
		"$datadir"/artifacts \
		"$datadir"/builds \
		"$datadir"/lfs-objects \
		"$datadir"/uploads || return 1

	install -d -m02770 -o git -g git \
		"$datadir"/repositories || return 1

	# Remove some useless files before copying.
	rm -r lib/support
	rm config/aws.yml.example config/database.yml.mysql
	rm config/gitlab.teatro.yml config/unicorn.rb.example.development
	find lib/tasks -maxdepth 1 -type f ! -name cache.rake ! -name setup.rake -delete
	find lib/tasks/gitlab -name generate_docs.* -o -name shell.* -o -name test.* -delete

	mv config/unicorn.rb.example config/unicorn.rb || return 1

	# Install application files. Note: *VERSION files are required.
	cp -rl .bundle config.ru Gemfile* GITLAB_SHELL_VERSION GITLAB_WORKHORSE_VERSION \
		Rakefile VERSION app db config lib public vendor "$destdir"/ || return 1

	install -m755 -t "$destdir"/bin bin/bundle bin/mail_room bin/rails \
		bin/rake bin/sidekiq bin/unicorn_rails || return 1

	# Install and symlink config files.
	_mv_config database.yml.postgresql || return 1
	_mv_config gitlab.yml.example || return 1
	_mv_config resque.yml.example || return 1
	_mv_config sidekiq.yml.example || return 1
	_mv_config initializers/rack_attack.rb.example rack_attack.rb || return 1
	_mv_config initializers/smtp_settings.rb.sample smtp_settings.rb || return 1

	# These files will be generated by the post-install script, just prepare symlinks.
	for file in secret_token secrets.yml; do
		ln -sf /etc/gitlab/$file "$destdir"/config/$file || return 1
	done

	echo "export RAILS_ENV=production" > "$datadir"/.profile

	# Some paths are hard-coded in GitLab, so we must make symlinks. :(
	ln -sf /var/lib/gitlab/uploads "$destdir"/public/uploads || return 1
	ln -sf /var/log/gitlab "$destdir"/log || return 1
	ln -sf /tmp/gitlab "$destdir"/tmp || return 1

	# See the last comment in the build() function.
	ln -sf /usr/bin/ruby$_rubyslot "$destdir"/bin/ruby || return 1

	install -m755 -D "$srcdir"/gitlab-rake "$pkgdir"/usr/bin/gitlab-rake || return 1

	for file in $_pkgname $_pkgname.sidekiq $_pkgname.mailroom; do
		install -m755 -D "$srcdir"/$file.initd "$pkgdir"/etc/init.d/$file || return 1
	done

	install -m644 -D "$srcdir"/$_pkgname.confd \
		"$pkgdir"/etc/conf.d/$_pkgname || return 1

	install -m644 -D "$srcdir"/$_pkgname.logrotate \
		"$pkgdir"/etc/logrotate.d/$_pkgname
}

assets() {
	arch="noarch"
	depends=""
	local destdir="${subpkgdir}$_prefix"

	install -dm755 "$destdir"/public
	mv "${pkgdir}$_prefix"/public/assets "$destdir"/public/
}

doc() {
	arch="noarch"
	depends=""
	local destdir="$subpkgdir/usr/share/doc/$_pkgname"

	cd "$builddir"

	install -dm755 "$destdir"
	cp -r CHANGELOG LICENSE doc "$destdir"/
}

_mv_config() {
	local src_name="$1"
	local dest_name="${2:-${src_name%.*}}"

	install -m640 -g git -D config/$src_name "$pkgdir"/etc/gitlab/$dest_name \
		&& ln -sf /etc/gitlab/$dest_name "$pkgdir"$_prefix/config/$dest_name
}

md5sums="5b8f04e4c05ef848baa3fed45c94bb4f  gitlab-ce-8.7.6.tar.gz
4c0b49a0d9732aad9b40f8f2809c1bf7  gitlab.initd
5cd94a6ac7e92b02d65126bfcaf6eb05  gitlab.mailroom.initd
c46dd56334ec024ecfcc7e7ec69f4808  gitlab.sidekiq.initd
91756c0664396ab9f76829c6567bdb94  gitlab.confd
ec823fda257d0e183f4c67e3b3f79d79  gitlab.logrotate
d1c8a8a2cd3ec07fa26d9c3e5f82ba03  gitlab-rake
0f3de0ec7d23ad04af882706a06bd316  0001-Gemfile.patch
65e33d2a11776a2ae362f91957fa7a25  0002-default-configs.patch
8fc5099f62f0bb02a370e6c739d0942a  0003-change-secret_token-path.patch
fae44c0a7da22724a907a87c4199c300  0004-fix-setup-task.patch
caac1ad3ea952399bc383e4775d67cbf  0005-fix-check-task.patch
ea55d2ffaadfb7a500f67bfe95627101  0006-fix-hardcoded-path.patch
fc9bb3bb79b907d7c6cd6a4e445b6abe  0007-add-mathjax-support.patch
9a5c56040b8ca5188ded3d1696562033  0008-fix-asciidoc-headers.patch"
sha256sums="c0422cfa51a6b4f8113cc39095066e67380cf8283a70da4acdf902c6d435a68e  gitlab-ce-8.7.6.tar.gz
5a4332fc33836219b44e91238b8dd6aa38da9573a5e1df75de3843fa69a90db2  gitlab.initd
7b1a785762dbdd5fa755ff4eeb3e2b52d6c8668833bd520ccef0561c5d497322  gitlab.mailroom.initd
952f2ce3b9c8463582acb72c0e5a1f67d2a3829086112aa81ec0dfed6524f1fe  gitlab.sidekiq.initd
ca303d9ef5a2ebc9c193f418a0e096677d5fa2ce8dead3c48075ea01bf1c71cb  gitlab.confd
13cb9f7a9f260e10d992dba4dc1b272ce9629af779cede349c059b80ef2416c1  gitlab.logrotate
2259a06c28c8e7a34a59295d5573a41c03ab76f382ac3c1f4064a3c1c93f80cf  gitlab-rake
834bf5b399ed3dc56aebb9f7daa753bf37615a494497d501f11b751868475b3c  0001-Gemfile.patch
b7b91619142352a9c8993936c10b25d85b502a197917df91d07d8ca12146e355  0002-default-configs.patch
3537035f1822e471420c5556b2cbc3c2bf29c7257c0a0051ce8d3c81d4207748  0003-change-secret_token-path.patch
29e37d0d76a1e66f0ebe607e843ccd46f3b7b380619cea9ffe29a0da2b638429  0004-fix-setup-task.patch
f7f1a9adbbc15781c9966316d1ed10d73fa86ba8e093916940f4a0e640f11248  0005-fix-check-task.patch
a3e1464304cfd1bba86fd23901caca0196c03f8ecd7b97b4fe58d33f833e397c  0006-fix-hardcoded-path.patch
588f93673bd0f2e45c997a12ff126acd3d863bb7f77762b4717dc531cdb2f59b  0007-add-mathjax-support.patch
7acc561e597df2ad5ac04371e15af36d1903ad1c7830fd8b7676ca868b1e764f  0008-fix-asciidoc-headers.patch"
sha512sums="aa2c78c3f6814c2a7da7967a4d2264bc0f605ff71505467e08c85bfcb3bf202cdd8a9a337ef8e943c3e4371e848ada358d5b47d1d55c0a5544c54eb958727f3b  gitlab-ce-8.7.6.tar.gz
835db9b6f4d9df0f1868d37b4562d0ae02d44983ef2119c13f7935fb258e6341a37f2162ac1716961252ff2bb7a9a23f8822443b7897388d07db59016ac964e9  gitlab.initd
d56587e94db0f607d4d37dbc1952914e2d6628405b3c2fe9f7548f27ca70f5393bf4fdebc7fa192b9bad7d07706a55cd77a910bd127236422f0f6d4a5a46be25  gitlab.mailroom.initd
705a05d7a1e1d01a83845d483d65ffd2bf1c5c9f3186f78bfe8cd515efda7452f74a5ce92be9373be5a1cf6bedb583ba545821cecdb43f42859644cf8fab78b2  gitlab.sidekiq.initd
a162412e9df709ab48cb223097c0f39dd58735a4a6f93c97686bc73727834f7ff437a573a24ff6229e4447fff0c0398d362281f3274ad28426f7054bfe3c5ba1  gitlab.confd
d711d9c0a17a8a6f862f5505da1eb65a701917155207b5864b40e8acfaf958c68a2d8f9b01a92871b3d630e00c78df38b24701e4adcba8f1d35cdc69dedf2df6  gitlab.logrotate
77e9640a88a6361e14a1a4fe84e08d3858697fc5a1a89ec501dc136b105d483a3cfabe43250775f8d8bd5269d1cc4b2ba29a646b115b26526e5c0a54060b158b  gitlab-rake
e296d17db1dacd65587072a646ff751ec6f731a478d1b13ec8b7998ba3a9d5f42c17246f2e35e05114653207eee7c19e93176302ba7bcda3ad3593f922eb89c4  0001-Gemfile.patch
d6e1fbedac5382066349eefb0faf07d5aed292e358bb394b32ac5466dbca89eb3b2991d3a1e35897195c71286c5cd5a66dc5ef67f28ab36a63b7957b5d8229ea  0002-default-configs.patch
2d26cf59ad97f083303e41421a71d6fc968999d4a614a872fa4a447c27134cfc263c221d3f508ef2a8e73fac024b4e905b5c2821d1fc3758107947a2639d28f0  0003-change-secret_token-path.patch
ae798cdbc5e3292cc874a4bb8aee56f489abd2de1d33333fe2638f7a6bca768be08151d492532d606ee65de2931687b4ada164890efb670e91e84fbdc5098a91  0004-fix-setup-task.patch
2b9c8b63f1428447878e14eac2f8cb0a8e345f4933ef527b8954e9d807250c88de9b33c02e9903946b4e60707fb6b6451df78496de573a1078a262df7582ad46  0005-fix-check-task.patch
95a20e0974e7a804ac1e1e7cd0002fcd3aa3bb0b359beaee8c3120b350263cd2496b0bd9b8b927b17bc8e9876f28efe95ddec583389a6009882f684e98b74b80  0006-fix-hardcoded-path.patch
b24bd03cb3bb2057b95266a73d328cb95d8c73670e3c2344b009f1da5ae42b66890a4ffd092f8f430ed0ff1ed6f098421bfce3624aefa2a684c87e2349a802f4  0007-add-mathjax-support.patch
8a6d3b6731f29addd9215079a8e26d30b4d54f4e7050585af1cbee5f1b1ecec0aa28c952efdf5d96324ce92e94aa3b439ccc563f8b57d6788a07a1866a1331b1  0008-fix-asciidoc-headers.patch"
