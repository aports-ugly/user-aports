# Contributor: Jakub Jirutka <jakub@jirutka.cz>
# Maintainer: Jakub Jirutka <jakub@jirutka.cz>
pkgname=gitlab-ce
_pkgname=${pkgname%-ce}
pkgver=8.17.5
pkgrel=2
pkgdesc="A version control for your server"
url="https://github.com/gitlabhq/gitlabhq"
arch="all"
license="MIT"
_rubyslot=""
# ruby-irb is needed only for Rails console (gitlab-rails console)
depends="$pkgname-assets=$pkgver-r$pkgrel
	gitlab-shell>=4.1.1
	gitlab-workhorse>=1.3.0
	ca-certificates
	git>=2.8.3
	http-parser
	libgit2>=0.24
	procps
	py-docutils
	python3
	redis>=2.8
	tzdata
	ruby$_rubyslot
	ruby$_rubyslot-io-console
	ruby$_rubyslot-bigdecimal
	ruby$_rubyslot-json
	ruby$_rubyslot-rake
	ruby$_rubyslot-irb
	ruby$_rubyslot-bundler>=1.5.2
	"
makedepends="
	icu-dev
	libgcrypt-dev
	libgit2-dev>=0.24
	libxml2-dev
	libxslt-dev
	linux-headers
	libressl-dev
	postgresql-dev
	nodejs>=4.3.0
	ruby$_rubyslot-dev
	yarn
	"
pkgusers="git"
pkggroups="git"
install="$pkgname.pre-install $pkgname.post-install $pkgname.post-upgrade"
subpackages="$pkgname-assets::noarch"
source="$pkgname-$pkgver.tar.gz::https://github.com/gitlabhq/gitlabhq/archive/v$pkgver.tar.gz
	$_pkgname.initd
	$_pkgname.mailroom.initd
	$_pkgname.sidekiq.initd
	$_pkgname.confd
	$_pkgname.logrotate
	bin-wrapper.in
	0001-Gemfile.patch
	dont-hardcode-gitlab_workhorse_secret-path.patch
	0002-default-configs.patch
	0003-dont-dump-schema.patch
	0004-fix-setup-task.patch
	0005-fix-check-task.patch
	0006-replace-sys-filesystem.patch
	0009-gitlab-revision.patch
	relative-url-sample.patch
	"
builddir="$srcdir/gitlabhq-$pkgver"

_prefix="/usr/lib/bundles/$_pkgname"

prepare() {
	default_prepare || return 1  # apply patches

	cd "$builddir"

	# Change shebang to run with correct Ruby version.
	#local file; for file in bin/bundle bin/rails bin/rake; do
	#	sed -i "s|/usr/bin/env ruby|/usr/bin/env ruby$_rubyslot|" $file || return 1
	#done
	#sed -i "s|/usr/bin/env rake|/usr/bin/env rake$_rubyslot|" Rakefile || return 1

	# The default log level is very chatty.
	sed -i 's/^\(\s*config.log_level\s*=\).*$/\1 :warn/' \
		config/environments/production.rb || return 1

	# This is not needed, the secret_token is generated by the
	# gitlab-shell package. It also makes problems in the build phase.
	rm config/initializers/gitlab_shell_secret_token.rb

	# Remove some useless configs.
	rm config/aws.yml.example \
		config/database.yml.env \
		config/database.yml.mysql \
		config/karma.config.js \
		config/newrelic.yml \
		config/unicorn.rb.example.development \
		config/environments/development.rb \
		config/environments/test.rb
}

build() {
	local bundle="bundle$_rubyslot"
	local bundle_opts="--deployment --jobs=${JOBS:-2} --no-cache
		--without exclude auth_ext backups_ext development kerberos metrics mysql test"

	cd "$builddir"

	msg "Installing Ruby gems..."

	$bundle config build.nokogiri --use-system-libraries
	$bundle config build.rugged --use-system-libraries

	$bundle $bundle_opts || return 1

	# Patch installed gem gitlab-markup to use python3.
	sed -i 's/python2/python3/g' \
		vendor/bundle/ruby/*/gems/gitlab-markup-*/lib/github/markups.rb || return 1

	msg "Installing npm modules..."

	yarn install --production --pure-lockfile || return 1

	msg "Compiling assets (this will take few minutes)..."

	# Since we have moved assets gems into a group, they are not implicitly
	# loaded by default. This will be reverted after compiling assets.
	sed -i.bak '/Bundler.require(:default, Rails.env/s/)/, :assets)/' \
		config/application.rb || return 1

	# assets:precompile bootstraps the app, so it needs configs.
	cp config/gitlab.yml.example config/gitlab.yml || return 1
	cp config/database.yml.postgresql config/database.yml || return 1

	# The configured path is not readable for the user building
	# the package, so we must remove it; GitLab will use the default path.
	sed -i '/^\s*secret_file:.*/d' config/gitlab.yml || return 1

	$bundle exec rake gitlab:assets:compile \
		NODE_ENV=production \
		RAILS_ENV=production \
		SECRET_KEY_BASE="top-secret" \
		SKIP_STORAGE_VALIDATION=true \
		USE_DB=false || return 1

	mv config/application.rb.bak config/application.rb || return 1

	msg "Cleaning assets gems..."

	$bundle $bundle_opts assets --clean || return 1

	# Create executables in bin/*.
	$bundle binstubs --force mail_room sidekiq unicorn || return 1

	# When GitLab executes a system command, it leaks some Bundler
	# env. variables. The problem may occur when it execute a Ruby script
	# with shebang "/usr/bin/env ruby"; Bundler tries to initialize GitLab
	# environments, but due to different Ruby versions it doesn't see its
	# gems. The workaround is to symlink ruby -> ruby2.1 to $_prefix/bin
	# and add it to the PATH.
	#local file; for file in bin/*; do
	#	[ -f $file ] || continue
	#	# Add text after the first line of the file.
	#	sed -i "1a ENV['PATH'] = \"#{__dir__}:#{ENV['PATH']}\"" $file || return 1
	#done

	# Cleanup
	rm config/database.yml config/gitlab.yml config/secrets.yml
	rm -R vendor/bundle/ruby/*/build_info
	rm -R vendor/bundle/ruby/*/cache/
	rm vendor/bundle/ruby/*/gems/grape-*/pkg/*.gem
	find vendor/bundle/ruby/*/gems -name "doc" -type d -exec rm -vrf "{}" +
}

package() {
	local destdir="${pkgdir}$_prefix"
	local datadir="$pkgdir/var/lib/gitlab"
	local file dest

	cd "$builddir"

	install -d -m755 "$destdir" "$destdir"/bin

	install -d -m755 -o git -g git \
		"$datadir" \
		"$pkgdir"/etc/gitlab \
		"$pkgdir"/var/log/gitlab \
		"$datadir"/pages || return 1

	install -d -m700 -o git -g git \
		"$datadir"/artifacts \
		"$datadir"/builds \
		"$datadir"/lfs-objects \
		"$datadir"/registry \
		"$datadir"/uploads || return 1

	install -d -m02770 -o git -g git \
		"$datadir"/repositories || return 1

	# Remove some useless files before copying.
	rm -r lib/support db/fixtures/development
	find lib/tasks -maxdepth 1 -type f ! -name cache.rake ! -name setup.rake -delete
	find lib/tasks/gitlab -name generate_docs.* -o -name shell.* -o -name test.* -delete

	mv config/unicorn.rb.example config/unicorn.rb || return 1

	# Install application files.
	# Note: *VERSION files and doc directory are required (Help in GitLab
	# menu refers to the doc directory).
	cp -rl .bundle config.ru Gemfile* GITLAB_* Rakefile VERSION app db doc \
		fixtures config lib public vendor \
		"$destdir"/ || return 1

	# Not needed in runtime since we have already compiled all assets.
	rm -R "$destdir"/app/assets \
		"$destdir"/vendor/assets || return 1

	install -m755 -t "$destdir"/bin \
		bin/bundle bin/mail_room bin/rails bin/rake \
		bin/sidekiq bin/unicorn_rails || return 1

	# Just to unify the next for loop...
	mv config/sidekiq_queues.yml config/sidekiq_queues.yml.orig || return 1

	# Install and symlink config files.
	for file in database.yml.postgresql \
			gitlab.yml.example \
			resque.yml.example \
			sidekiq.yml.example \
			sidekiq_queues.yml.orig \
			initializers/rack_attack.rb.example \
			initializers/relative_url.rb.sample \
			initializers/smtp_settings.rb.sample; do
		dest="$(basename "${file%.*}")"
		install -m640 -g git -D config/$file "$pkgdir"/etc/gitlab/$dest || return 1
		ln -sf /etc/gitlab/$dest "$pkgdir"$_prefix/config/${file%.*} || return 1
	done

	# This file will be generated by the post-install script, just prepare symlink.
	ln -sf /etc/gitlab/secrets.yml "$destdir"/config/secrets.yml || return 1

	cat > "$datadir"/.profile <<-EOF
		export RAILS_ENV=production
		export NODE_ENV=production
		export EXECJS_RUNTIME=Disabled
	EOF

	# Some paths are hard-coded in GitLab, so we must make symlinks. :(
	ln -sf /var/lib/gitlab/uploads "$destdir"/public/uploads || return 1
	ln -sf /var/log/gitlab "$destdir"/log || return 1
	ln -sf /tmp/gitlab "$destdir"/tmp || return 1

	# See the last comment in the build() function.
	#ln -sf /usr/bin/ruby$_rubyslot "$destdir"/bin/ruby || return 1

	# Install wrapper scripts to /usr/bin.
	local name; for name in rake rails; do
		sed "s/__COMMAND__/$name/g" "$srcdir"/bin-wrapper.in > gitlab-$name || return 1
		install -m755 -D gitlab-$name "$pkgdir"/usr/bin/gitlab-$name || return 1
	done

	for file in $_pkgname $_pkgname.sidekiq $_pkgname.mailroom; do
		install -m755 -D "$srcdir"/$file.initd "$pkgdir"/etc/init.d/$file || return 1
	done

	install -m644 -D "$srcdir"/$_pkgname.confd \
		"$pkgdir"/etc/conf.d/$_pkgname || return 1

	install -m644 -D "$srcdir"/$_pkgname.logrotate \
		"$pkgdir"/etc/logrotate.d/$_pkgname
}

assets() {
	depends=""
	local destdir="${subpkgdir}$_prefix"

	install -dm755 "$destdir"/public
	mv "${pkgdir}$_prefix"/public/assets "$destdir"/public/
}

md5sums="a8fb97758feddda77d9df28d1edbc2fc  gitlab-ce-8.17.5.tar.gz
d124eb46ca0d57b5287333bfee7f8ec7  gitlab.initd
5cd94a6ac7e92b02d65126bfcaf6eb05  gitlab.mailroom.initd
c0af4429c9da9c313b41925cbefefafc  gitlab.sidekiq.initd
0f6bd0e731025ab6f87c9c57b1d5bde4  gitlab.confd
ec823fda257d0e183f4c67e3b3f79d79  gitlab.logrotate
eb7cb58375b6c4f58f8aabd8a9bd79d2  bin-wrapper.in
bc3d9db8cffc1c4b235fb2211baf79ee  0001-Gemfile.patch
a23a69d5c61ac7521b1412504ff78bc5  dont-hardcode-gitlab_workhorse_secret-path.patch
8c2310a8f23f3ba35adf34fc0ba32814  0002-default-configs.patch
9ec230f02a0aa7350605dd8d2802d924  0003-dont-dump-schema.patch
fae44c0a7da22724a907a87c4199c300  0004-fix-setup-task.patch
ac9cb7da3cdeb056922d05b86b1df6d7  0005-fix-check-task.patch
a1d32fa537fe878e74f01ca50df0e2f1  0006-replace-sys-filesystem.patch
d5eaa8ce1e5f12619891994b2d0a97fa  0009-gitlab-revision.patch
f174956e5da7f66cbbed43a71a08e8af  relative-url-sample.patch"
sha256sums="e3b8ac2a1234171bf700a7f07de845a440cc6b31d88b087bfa87cc4f4dc3a898  gitlab-ce-8.17.5.tar.gz
c7aa5b95b3c025f5675247c881d19a200ce924ef89fc1deab15c51b0e062d5bc  gitlab.initd
7b1a785762dbdd5fa755ff4eeb3e2b52d6c8668833bd520ccef0561c5d497322  gitlab.mailroom.initd
ef8d7e9fcbc0844c01edb4ffb7e0aa0b42b0fd80d37bacc3b752b54f9ae3f395  gitlab.sidekiq.initd
49c1f235d55c02f0395b18282522448a08c45001ba32fee369ed2be99f3424bb  gitlab.confd
13cb9f7a9f260e10d992dba4dc1b272ce9629af779cede349c059b80ef2416c1  gitlab.logrotate
8cc33fb6d56864759d064f7b7f52d547b099cb4f1fd254f5de0068b7358667fc  bin-wrapper.in
e95d02f7f4c5bffcd8dd86e78ea55903e4cdf75fc223f1f0ed5eadc9a8061b54  0001-Gemfile.patch
c710ecdfd5884e506456a38eccb91a36bf41f7dbf73ed15c0482da73bcf8fef0  dont-hardcode-gitlab_workhorse_secret-path.patch
a8caef55193ebd715ae206506c4f234daf0aee976ca0a61f37d3157ce5bd9eb5  0002-default-configs.patch
c84cb62eebe4784afc715bfbbbe51494261f9495c6d72e15aa4a66b132745559  0003-dont-dump-schema.patch
29e37d0d76a1e66f0ebe607e843ccd46f3b7b380619cea9ffe29a0da2b638429  0004-fix-setup-task.patch
d2ae2c2c8229606ca109b39e5f43bce528534a8d50babe1ec77bbedc5799d20c  0005-fix-check-task.patch
251b43279cf02caf6453e16ab1acc8e72bacf78b9aff1331e9523a4ce49a0e6e  0006-replace-sys-filesystem.patch
8cd06457b32dda57178157859740ffa370a521906a2b3aa40bb5d698acf52af1  0009-gitlab-revision.patch
336b8066a9d898d777948059d7e09df939570442ff6cc8ee574d08a65f52387a  relative-url-sample.patch"
sha512sums="56930cd82021082be0f7ebcce1a187e2328d150782575294712f91dc15cd4d764fd14534bde65f0beeae6b70a3f76e679ff6c94e129640a78ffde1263381752c  gitlab-ce-8.17.5.tar.gz
0997e2454f389f8218e764054f63aaf6fa5a0663b23d86e1141fe48a02ac6952305b36730827e615dd4efc310a2abb7e0f26fb3ae52a7759a0e30c4850134998  gitlab.initd
d56587e94db0f607d4d37dbc1952914e2d6628405b3c2fe9f7548f27ca70f5393bf4fdebc7fa192b9bad7d07706a55cd77a910bd127236422f0f6d4a5a46be25  gitlab.mailroom.initd
4dee153c5d9aafb10d310baa9cc5950cdcb23e32210682827c258423b9a268e9b92ee979f23ac37e9de7d175a4fccb036bd51dbd88bf45fec472bd2d81e020e6  gitlab.sidekiq.initd
f8bbf8eca453d4221820fbda36488873f1ef9a50321af863d7e9eaccf75ba7509a0767291fd2ec6cd42332ebb27811b957ae8f639ad1b5345754dd5f6f97888c  gitlab.confd
d711d9c0a17a8a6f862f5505da1eb65a701917155207b5864b40e8acfaf958c68a2d8f9b01a92871b3d630e00c78df38b24701e4adcba8f1d35cdc69dedf2df6  gitlab.logrotate
a944c3886388ba1574bf8c96b6de4d9f24ef4a83f553c31a224e17a3b01f2a5c65b60c59b7ed7ca4b25670c60ea8dd41b96a8a623d909d2bb09bdf2520ed7f23  bin-wrapper.in
eb5a9de97422515cf309448af27b76f63d21e02f6c756390fb2a371254836e61245c2586b017705937c7a81332ef96fe5257f3f95fc19ebad2aa0bebb8b71859  0001-Gemfile.patch
ca651676cb4b44182078af2e8e078e40e79cadafc069a5699617a4e96106dc1e83da99d1847c9799e9b02e90e2a2b1caa0242a701aa943293bbbeb0876edbed8  dont-hardcode-gitlab_workhorse_secret-path.patch
b3bd726fbad0b28a377cf20ee98d16baa54175ee403d4f8d9b7fca5275e5bdff44a98c240355f6db9a9539a101f03fd622cee06dd9176eb5895f22d2dc443668  0002-default-configs.patch
5fe15dae9b27641dafdefa44e8a31a0b9fbcb2b3485fe0691fe60016e7bc646edf79d204068555699e18e9b643f9ea05dec0919333a3c4999381eff62df00a75  0003-dont-dump-schema.patch
ae798cdbc5e3292cc874a4bb8aee56f489abd2de1d33333fe2638f7a6bca768be08151d492532d606ee65de2931687b4ada164890efb670e91e84fbdc5098a91  0004-fix-setup-task.patch
7378b4d1745ba75111e3c11218f7f89c047ecd4b663a85484095448daacc991ec1df924177261e286abafc02c39894bceafc2a0aad97c99dea63ec342610255b  0005-fix-check-task.patch
af32919422bbbfdf58d2a3403a3b5455e50b25be4e6f3e396e7ffb473cd118cd6e2ef075a6f058681371962c5390d1e7e2f4e87a538bfa53177291898966c65b  0006-replace-sys-filesystem.patch
7a1eab9b09e123e3130ca4ff90e20ab1d422694efd2c8e7d087afe3d6585d7df702c53759b4770aab5ea276f06aca5358e04b5594a588ec3d6f3e9d896d818e7  0009-gitlab-revision.patch
6af80dd113a330e5a5b73ceae214ebbadd0ae9c89db10963a973a35f348096adf2edaf3aac14f065560efddda0be4da83e247442896f57a2de8edfbfa55e4fdb  relative-url-sample.patch"
