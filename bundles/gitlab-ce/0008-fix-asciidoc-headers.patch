From: Jakub Jirutka <jakub@jirutka.cz>
Date: Sat, 30 May 2016 14:36:00 +0200
Subject: [PATCH] Fix margins of AsciiDoc headers

This patch is backported from
https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/4337.

diff --git a/app/assets/stylesheets/framework/typography.scss b/app/assets/stylesheets/framework/typography.scss
index 0a5b4b8..bb82745 100644
--- a/app/assets/stylesheets/framework/typography.scss
+++ b/app/assets/stylesheets/framework/typography.scss
@@ -1,4 +1,4 @@
-@mixin md-typography {
+@mixin wiki-typography {
   color: $md-text-color;
   word-wrap: break-word;
 
@@ -10,10 +10,6 @@
     max-width: 100%;
   }
 
-  *:first-child {
-    margin-top: 0;
-  }
-
   code {
     font-family: $monospace_font;
     white-space: pre;
@@ -172,6 +168,12 @@
   }
 }
 
+@mixin md-typography {
+  *:first-child {
+    margin-top: 0;
+  }
+}
+
 
 /**
  * Headers
@@ -239,10 +241,15 @@ a > code {
  *
  */
 .wiki {
-  @include md-typography;
+  @include wiki-typography;
+
+  &:not(.adoc) {
+    @include md-typography;
+  }
 }
 
 .md {
+  @include wiki-typography;
   @include md-typography;
 }
 
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index 3e0074d..a1da220 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -228,6 +228,10 @@ module ApplicationHelper
     simple_format(file_content)
   end
 
+  def markup_lang(filename)
+    Gitlab::MarkupHelper.markup_lang(filename)
+  end
+
   def plain?(filename)
     Gitlab::MarkupHelper.plain?(filename)
   end
diff --git a/app/views/projects/_readme.html.haml b/app/views/projects/_readme.html.haml
index a9908ea..2565161 100644
--- a/app/views/projects/_readme.html.haml
+++ b/app/views/projects/_readme.html.haml
@@ -3,7 +3,7 @@
     .pull-right
       - if can?(current_user, :push_code, @project)
         = link_to icon('pencil'), namespace_project_edit_blob_path(@project.namespace, @project, tree_join(@repository.root_ref, readme.name)), class: 'light edit-project-readme'
-    .file-content.wiki
+    .file-content.wiki{ class: markup_lang(readme.name) }
       = cache(readme_cache_key) do
         = render_readme(readme)
 - else
diff --git a/app/views/projects/blob/_text.html.haml b/app/views/projects/blob/_text.html.haml
index d09cd73..22679dc 100644
--- a/app/views/projects/blob/_text.html.haml
+++ b/app/views/projects/blob/_text.html.haml
@@ -1,6 +1,6 @@
 - blob.load_all_data!(@repository)
 - if markup?(blob.name)
-  .file-content.wiki
+  .file-content.wiki{ class: markup_lang(blob.name) }
     = render_markup(blob.name, blob.data)
 - else
   - unless blob.empty?
diff --git a/app/views/projects/blob/preview.html.haml b/app/views/projects/blob/preview.html.haml
index 541dc96..4007d31 100644
--- a/app/views/projects/blob/preview.html.haml
+++ b/app/views/projects/blob/preview.html.haml
@@ -1,11 +1,11 @@
 .diff-file
   .diff-content
     - if gitlab_markdown?(@blob.name)
-      .file-content.wiki
+      .file-content.wiki.md
         = preserve do
           = markdown(@content)
     - elsif markup?(@blob.name)
-      .file-content.wiki
+      .file-content.wiki{ class: markup_lang(@blob.name) }
         = raw render_markup(@blob.name, @content)
     - else
       .file-content.code.js-syntax-highlight
diff --git a/app/views/projects/tree/_readme.html.haml b/app/views/projects/tree/_readme.html.haml
index baaa2ca..be1c801 100644
--- a/app/views/projects/tree/_readme.html.haml
+++ b/app/views/projects/tree/_readme.html.haml
@@ -4,5 +4,5 @@
     = link_to namespace_project_blob_path(@project.namespace, @project, tree_join(@repository.root_ref, @path, readme.name)) do
       %strong
         = readme.name
-  .file-content.wiki
+  .file-content.wiki{ class: markup_lang(readme.name) }
     = render_readme(readme)
diff --git a/app/views/projects/wikis/show.html.haml b/app/views/projects/wikis/show.html.haml
index 067fb7f..0ea21f1 100644
--- a/app/views/projects/wikis/show.html.haml
+++ b/app/views/projects/wikis/show.html.haml
@@ -20,6 +20,6 @@
 
 
 .wiki-holder.prepend-top-default
-  .wiki
+  .wiki{ class: markup_lang(@page.page.path) }
     = preserve do
       = render_wiki_content(@page)
diff --git a/app/views/search/results/_snippet_blob.html.haml b/app/views/search/results/_snippet_blob.html.haml
index c9b7bd1..6cc44e1 100644
--- a/app/views/search/results/_snippet_blob.html.haml
+++ b/app/views/search/results/_snippet_blob.html.haml
@@ -18,7 +18,7 @@
         %i.fa.fa-file
         %strong= snippet.file_name
       - if markup?(snippet.file_name)
-        .file-content.wiki
+        .file-content.wiki{ class: markup_lang(snippet.file_name) }
           - snippet_chunks.each do |chunk|
             - unless chunk[:data].empty?
               = render_markup(snippet.file_name, chunk[:data])
diff --git a/app/views/shared/snippets/_blob.html.haml b/app/views/shared/snippets/_blob.html.haml
index 773ce8a..a3a4533 100644
--- a/app/views/shared/snippets/_blob.html.haml
+++ b/app/views/shared/snippets/_blob.html.haml
@@ -2,7 +2,7 @@
   - if markup?(@snippet.file_name)
     %textarea.markdown-snippet-copy.blob-content{data: {blob_id: @snippet.id}}
       = @snippet.data
-    .file-content.wiki
+    .file-content.wiki{ class: markup_lang(@snippet.file_name) }
       = render_markup(@snippet.file_name, @snippet.data)
   - else
     = render 'shared/file_highlight', blob: @snippet
diff --git a/lib/gitlab/markup_helper.rb b/lib/gitlab/markup_helper.rb
index a5f767b..69260ed 100644
--- a/lib/gitlab/markup_helper.rb
+++ b/lib/gitlab/markup_helper.rb
@@ -10,8 +10,7 @@ module Gitlab
     def markup?(filename)
       gitlab_markdown?(filename) ||
         asciidoc?(filename) ||
-        filename.downcase.end_with?(*%w(.textile .rdoc .org .creole .wiki
-                                        .mediawiki .rst))
+        other_markup?(filename)
     end
 
     # Public: Determines if a given filename is compatible with
@@ -43,8 +42,42 @@ module Gitlab
         filename.downcase == 'readme'
     end
 
+    def other_markup?(filename)
+      filename.downcase.end_with?(*%w(.textile .rdoc .org .creole .wiki
+                                      .mediawiki .rst))
+    end
+
     def previewable?(filename)
       markup?(filename)
     end
+
+    # Public: Determines markup language from the given filename.
+    #
+    #   Markdown         => :md
+    #   AsciiDoc         => :adoc
+    #   Textile          => :textile
+    #   RDoc             => :rdoc
+    #   Org              => :org
+    #   Creole           => :creole
+    #   MediaWiki        => :mediawiki
+    #   reStructuredText => :rst
+    #   plain            => :plain
+    #   unknown          => nil
+    #
+    # filename - Filename string to check
+    #
+    # Returns Symbol or nil
+    def markup_lang(filename)
+      if gitlab_markdown?(filename)
+        :md
+      elsif asciidoc?(filename)
+        :adoc
+      elsif plain?(filename)
+        :plain
+      elsif other_markup?(filename)
+        name = File.extname(filename.downcase)[1..-1]
+        name.to_sym if name != 'wiki'
+      end
+    end
   end
 end
diff --git a/spec/lib/gitlab/markup_helper_spec.rb b/spec/lib/gitlab/markup_helper_spec.rb
index 93b91b8..53930e5 100644
--- a/spec/lib/gitlab/markup_helper_spec.rb
+++ b/spec/lib/gitlab/markup_helper_spec.rb
@@ -1,9 +1,13 @@
 require 'spec_helper'
 
 describe Gitlab::MarkupHelper, lib: true do
+
+  markdown_exts = %w(mdown mkd mkdn md markdown)
+  asciidoc_exts = %w(adoc ad asciidoc ADOC)
+  markup_exts = %w(textile rdoc org creole wiki mediawiki rst) + markdown_exts + asciidoc_exts
+
   describe '#markup?' do
-    %w(textile rdoc org creole wiki
-       mediawiki rst adoc ad asciidoc mdown md markdown).each do |type|
+    markup_exts.each do |type|
       it "returns true for #{type} files" do
         expect(Gitlab::MarkupHelper.markup?("README.#{type}")).to be_truthy
       end
@@ -15,7 +19,7 @@ describe Gitlab::MarkupHelper, lib: true do
   end
 
   describe '#gitlab_markdown?' do
-    %w(mdown mkd mkdn md markdown).each do |type|
+    markdown_exts.each do |type|
       it "returns true for #{type} files" do
         expect(Gitlab::MarkupHelper.gitlab_markdown?("README.#{type}")).to be_truthy
       end
@@ -27,7 +31,7 @@ describe Gitlab::MarkupHelper, lib: true do
   end
 
   describe '#asciidoc?' do
-    %w(adoc ad asciidoc ADOC).each do |type|
+    asciidoc_exts.each do |type|
       it "returns true for #{type} files" do
         expect(Gitlab::MarkupHelper.asciidoc?("README.#{type}")).to be_truthy
       end
@@ -37,4 +41,28 @@ describe Gitlab::MarkupHelper, lib: true do
       expect(Gitlab::MarkupHelper.asciidoc?('README.rb')).not_to be_truthy
     end
   end
+
+  describe '#markup_lang' do
+    {
+      md: markdown_exts,
+      adoc: asciidoc_exts,
+      textile: 'textile',
+      rdoc: 'rdoc',
+      org: 'org',
+      creole: 'creole',
+      mediawiki: 'mediawiki',
+      rst: 'rst',
+      plain: 'txt'
+    }.each do |expected, exts|
+      Array(exts).each do |ext|
+        it "returns :#{expected} for filename with extension .#{ext}" do
+          expect(Gitlab::MarkupHelper.markup_lang("README.#{ext}")).to eq expected
+        end
+      end
+    end
+
+    it 'returns nil for filename with unknown extension' do
+      expect(Gitlab::MarkupHelper.markup_lang('README.foo')).to be nil
+    end
+  end
 end
