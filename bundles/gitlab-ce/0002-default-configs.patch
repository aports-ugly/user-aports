From: Jakub Jirutka <jakub@jirutka.cz>
Date: Wed, 29 Apr 2016 01:08:00 +0200
Subject: [PATCH] Adjust paths and remove some boilerplate from configs

diff --git a/config/database.yml.postgresql b/config/database.yml.postgresql
index 7067e0f..c4a36e3 100644
--- a/config/database.yml.postgresql
+++ b/config/database.yml.postgresql
@@ -1,45 +1,10 @@
-#
-# PRODUCTION
-#
+---
 production:
   adapter: postgresql
   encoding: unicode
-  database: gitlabhq_production
-  pool: 10
-  # username: git
+  database: gitlab
+  pool: 5
+  # username: gitlab
   # password:
   # host: localhost
-  # port: 5432 
-
-#
-# Development specific
-#
-development:
-  adapter: postgresql
-  encoding: unicode
-  database: gitlabhq_development
-  pool: 5
-  username: postgres
-  password:
-
-#
-# Staging specific
-#
-staging:
-  adapter: postgresql
-  encoding: unicode
-  database: gitlabhq_staging
-  pool: 5
-  username: postgres
-  password:
-
-# Warning: The database defined as "test" will be erased and
-# re-generated from your development database when you run "rake".
-# Do not set this db to the same as development or production.
-test: &test
-  adapter: postgresql
-  encoding: unicode
-  database: gitlabhq_test
-  pool: 5
-  username: postgres
-  password:
+  # port: 5432
diff --git a/config/gitlab.yml.example b/config/gitlab.yml.example
index d9c15f8..f687e2b 100644
--- a/config/gitlab.yml.example
+++ b/config/gitlab.yml.example
@@ -2,15 +2,6 @@
 # GitLab application config file  #
 # # # # # # # # # # # # # # # # # #
 #
-###########################  NOTE  #####################################
-# This file should not receive new settings. All configuration options #
-# * are being moved to ApplicationSetting model!                       #
-# If a setting requires an application restart say so in that screen.  #
-# If you change this file in a Merge Request, please also create       #
-# a MR on https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests  #
-########################################################################
-#
-#
 # How to use:
 # 1. Copy file as gitlab.yml
 # 2. Update gitlab -> host with your fully qualified domain name
@@ -106,7 +97,7 @@ production: &base
     ## Repository downloads directory
     # When a user clicks e.g. 'Download zip' on a project, a temporary zip file is created in the following directory.
     # The default is 'tmp/repositories' relative to the root of the Rails app.
-    # repository_downloads_path: tmp/repositories
+    repository_downloads_path: /tmp/gitlab/downloads
 
   ## Reply by email
   # Allow users to comment on issues and merge requests by replying to notification emails.
@@ -141,13 +132,13 @@ production: &base
   artifacts:
     enabled: true
     # The location where build artifacts are stored (default: shared/artifacts).
-    # path: shared/artifacts
+    path: /var/lib/gitlab/artifacts
 
   ## Git LFS
   lfs:
     enabled: true
     # The location where LFS objects are stored (default: shared/lfs-objects).
-    # storage_path: shared/lfs-objects
+    storage_path: /var/lib/gitlab/lfs-objects
 
   ## Gravatar
   ## For Libravatar see: http://doc.gitlab.com/ce/customization/libravatar.html
@@ -190,7 +181,7 @@ production: &base
     # add_pusher: true
 
     # The location where build traces are stored (default: builds/). Relative paths are relative to Rails.root
-    # builds_path: builds/
+    builds_path: /var/lib/gitlab/builds/
 
   #
   # 3. Auth settings
@@ -235,7 +226,7 @@ production: &base
         # This setting specifies if LDAP server is Active Directory LDAP server.
         # For non AD servers it skips the AD specific queries.
         # If your LDAP server is not AD, set this to false.
-        active_directory: true
+        active_directory: false
 
         # If allow_username_or_email_login is enabled, GitLab will ignore everything
         # after the first '@' in the LDAP username submitted by the user on login.
@@ -310,7 +301,7 @@ production: &base
     # This allows users to login without having a user account first. Define the allowed providers
     # using an array, e.g. ["saml", "twitter"], or as true/false to allow all providers or none.
     # User accounts will be created automatically when authentication was successful.
-    allow_single_sign_on: ["saml"]
+    allow_single_sign_on: []
 
     # Locks down those users until they have been cleared by the admin (default: true).
     block_auto_created_users: true
@@ -318,11 +309,6 @@ production: &base
     # link the omniauth identity with the LDAP account. (default: false)
     auto_link_ldap_user: false
 
-    # Allow users with existing accounts to login and auto link their account via SAML
-    # login, without having to do a manual login first and manually add SAML
-    # (default: false)
-    auto_link_saml_user: false
-
     # Set different Omniauth providers as external so that all users creating accounts
     # via these providers will not be able to have access to internal projects. You
     # will need to use the full name of the provider, like `google_oauth2` for Google.
@@ -338,15 +324,6 @@ production: &base
     # arguments, followed by optional 'args' which can be either a hash or an array.
     # Documentation for this is available at http://doc.gitlab.com/ce/integration/omniauth.html
     providers:
-      # See omniauth-cas3 for more configuration details
-      # - { name: 'cas3',
-      #     label: 'cas3',
-      #     args: {
-      #             url: 'https://sso.example.com',
-      #             disable_ssl_verification: false,
-      #             login_url: '/cas/login',
-      #             service_validate_url: '/cas/p3/serviceValidate',
-      #             logout_url: '/cas/logout'} }
       # - { name: 'github',
       #     app_id: 'YOUR_APP_ID',
       #     app_secret: 'YOUR_APP_SECRET',
@@ -358,94 +335,34 @@ production: &base
       #     app_id: 'YOUR_APP_ID',
       #     app_secret: 'YOUR_APP_SECRET',
       #     args: { scope: 'api' } }
-      # - { name: 'google_oauth2',
-      #     app_id: 'YOUR_APP_ID',
-      #     app_secret: 'YOUR_APP_SECRET',
-      #     args: { access_type: 'offline', approval_prompt: '' } }
-      # - { name: 'facebook',
-      #     app_id: 'YOUR_APP_ID',
-      #     app_secret: 'YOUR_APP_SECRET' }
-      # - { name: 'twitter',
-      #     app_id: 'YOUR_APP_ID',
-      #     app_secret: 'YOUR_APP_SECRET' }
-      #
-      # - { name: 'saml',
-      #     label: 'Our SAML Provider',
-      #     groups_attribute: 'Groups',
-      #     external_groups: ['Contractors', 'Freelancers'],
-      #     args: {
-      #             assertion_consumer_service_url: 'https://gitlab.example.com/users/auth/saml/callback',
-      #             idp_cert_fingerprint: '43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8',
-      #             idp_sso_target_url: 'https://login.example.com/idp',
-      #             issuer: 'https://gitlab.example.com',
-      #             name_identifier_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'
-      #           } }
-      #
-      # - { name: 'crowd',
-      #     args: {
-      #       crowd_server_url: 'CROWD SERVER URL',
-      #       application_name: 'YOUR_APP_NAME',
-      #       application_password: 'YOUR_APP_PASSWORD' } }
-      #
-      # - { name: 'auth0',
-      #     args: {
-      #       client_id: 'YOUR_AUTH0_CLIENT_ID',
-      #       client_secret: 'YOUR_AUTH0_CLIENT_SECRET',
-      #       namespace: 'YOUR_AUTH0_DOMAIN' } }
-
-    # SSO maximum session duration in seconds. Defaults to CAS default of 8 hours.
-    # cas3:
-    #   session_duration: 28800
 
   # Shared file storage settings
   shared:
-    # path: /mnt/gitlab # Default: shared
+    path: /var/lib/gitlab # Default: shared
 
 
   #
   # 4. Advanced settings
   # ==========================
 
-  # GitLab Satellites
-  #
-  # Note for maintainers: keep the satellites.path setting until GitLab 9.0 at
-  # least. This setting is fed to 'rm -rf' in
-  # db/migrate/20151023144219_remove_satellites.rb
-  satellites:
-    path: /home/git/gitlab-satellites/
-
   ## Backup settings
   backup:
-    path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
+    path: "/var/tmp/gitlab/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
     # archive_permissions: 0640 # Permissions for the resulting backup.tar file (default: 0600)
     # keep_time: 604800   # default: 0 (forever) (in seconds)
     # pg_schema: public     # default: nil, it means that all schemas will be backed up
-    # upload:
-    #   # Fog storage connection settings, see http://fog.io/storage/ .
-    #   connection:
-    #     provider: AWS
-    #     region: eu-west-1
-    #     aws_access_key_id: AKIAKIAKI
-    #     aws_secret_access_key: 'secret123'
-    #   # The remote 'directory' to store your backups. For S3, this would be the bucket name.
-    #   remote_directory: 'my.s3.bucket'
-    #   # Use multipart uploads when file size reaches 100MB, see
-    #   #  http://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html
-    #   multipart_chunk_size: 104857600
-    #   # Turns on AWS Server-Side Encryption with Amazon S3-Managed Keys for backups, this is optional
-    #   # encryption: 'AES256'
 
   ## GitLab Shell settings
   gitlab_shell:
-    path: /home/git/gitlab-shell/
+    path: /usr/share/gitlab-shell/
 
     # REPOS_PATH MUST NOT BE A SYMLINK!!!
-    repos_path: /home/git/repositories/
-    hooks_path: /home/git/gitlab-shell/hooks/
+    repos_path: /var/lib/gitlab/repositories/
+    hooks_path: /usr/share/gitlab-shell/hooks/
 
     # File that contains the secret key for verifying access for gitlab-shell.
     # Default is '.gitlab_shell_secret' relative to Rails.root (i.e. root of the GitLab app).
-    # secret_file: /home/git/gitlab/.gitlab_shell_secret
+    secret_file: /etc/gitlab/gitlab-shell.secret
 
     # Git over HTTP
     upload_pack: true
@@ -494,51 +411,3 @@ production: &base
       #
       # Ban an IP for one hour (3600s) after too many auth attempts
       # bantime: 3600
-
-development:
-  <<: *base
-
-test:
-  <<: *base
-  gravatar:
-    enabled: true
-  lfs:
-    enabled: false
-  gitlab:
-    host: localhost
-    port: 80
-
-    # When you run tests we clone and setup gitlab-shell
-    # In order to setup it correctly you need to specify
-    # your system username you use to run GitLab
-    # user: YOUR_USERNAME
-  satellites:
-    path: tmp/tests/gitlab-satellites/
-  backup:
-    path: tmp/tests/backups
-  gitlab_shell:
-    path: tmp/tests/gitlab-shell/
-    repos_path: tmp/tests/repositories/
-    hooks_path: tmp/tests/gitlab-shell/hooks/
-  issues_tracker:
-    redmine:
-      title: "Redmine"
-      project_url: "http://redmine/projects/:issues_tracker_id"
-      issues_url: "http://redmine/:project_id/:issues_tracker_id/:id"
-      new_issue_url: "http://redmine/projects/:issues_tracker_id/issues/new"
-  ldap:
-    enabled: false
-    servers:
-      main:
-        label: ldap
-        host: 127.0.0.1
-        port: 3890
-        uid: 'uid'
-        method: 'plain' # "tls" or "ssl" or "plain"
-        base: 'dc=example,dc=com'
-        user_filter: ''
-        group_base: 'ou=groups,dc=example,dc=com'
-        admin_group: ''
-
-staging:
-  <<: *base
diff --git a/config/initializers/smtp_settings.rb.sample b/config/initializers/smtp_settings.rb.sample
index 2287a76..6ef52d4 100644
--- a/config/initializers/smtp_settings.rb.sample
+++ b/config/initializers/smtp_settings.rb.sample
@@ -1,14 +1,7 @@
-# To enable smtp email delivery for your GitLab instance do the following:
-# 1. Rename this file to smtp_settings.rb
-# 2. Edit settings inside this file
-# 3. Restart GitLab instance
-#
 # For full list of options and their values see http://api.rubyonrails.org/classes/ActionMailer/Base.html
-#
-# If you change this file in a Merge Request, please also create a Merge Request on https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests
 
 if Rails.env.production?
-  Rails.application.config.action_mailer.delivery_method = :smtp
+  #Rails.application.config.action_mailer.delivery_method = :smtp
 
   ActionMailer::Base.smtp_settings = {
     address: "email.server.com",
diff --git a/config/resque.yml.example b/config/resque.yml.example
index d98f43f..d6c4669 100644
--- a/config/resque.yml.example
+++ b/config/resque.yml.example
@@ -1,6 +1,2 @@
-# If you change this file in a Merge Request, please also create
-# a Merge Request on https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests
-#
-development: redis://localhost:6379
-test: redis://localhost:6379
-production: unix:/var/run/redis/redis.sock
+---
+production: unix:/run/redis/redis.sock
diff --git a/config/unicorn.rb.example b/config/unicorn.rb.example
index e5058ce..ae26e36 100644
--- a/config/unicorn.rb.example
+++ b/config/unicorn.rb.example
@@ -22,24 +22,19 @@
 # Read about unicorn workers here:
 # http://doc.gitlab.com/ee/install/requirements.html#unicorn-workers
 #
-worker_processes 3
-
-# Since Unicorn is never exposed to outside clients, it does not need to
-# run on the standard HTTP port (80), there is no reason to start Unicorn
-# as root unless it's from system init scripts.
-# If running the master process as root and the workers as an unprivileged
-# user, do this to switch euid/egid in the workers (also chowns logs):
-# user "unprivileged_user", "unprivileged_group"
+worker_processes ENV.fetch('UNICORN_WORKERS', 2).to_i
 
 # Help ensure your application will always spawn in the symlinked
 # "current" directory that Capistrano sets up.
-working_directory "/home/git/gitlab" # available in 0.94.0+
+working_directory ENV.fetch('GITLAB_BASE', Dir.pwd) # available in 0.94.0+
 
 # Listen on both a Unix domain socket and a TCP port.
 # If you are load-balancing multiple Unicorn masters, lower the backlog
 # setting to e.g. 64 for faster failover.
-listen "/home/git/gitlab/tmp/sockets/gitlab.socket", :backlog => 1024
-listen "127.0.0.1:8080", :tcp_nopush => true
+listen ENV['UNICORN_LISTEN_TCP'], :tcp_nopush => true
+if ENV['UNICORN_LISTEN_UNIX']
+  listen ENV['UNICORN_LISTEN_UNIX'], :backlog => 1024
+end
 
 # nuke workers after 30 seconds instead of 60 seconds (the default)
 #
@@ -56,16 +51,7 @@ listen "127.0.0.1:8080", :tcp_nopush => true
 #
 # For more information see http://stackoverflow.com/a/21682112/752049
 #
-timeout 60
-
-# feel free to point this anywhere accessible on the filesystem
-pid "/home/git/gitlab/tmp/pids/unicorn.pid"
-
-# By default, the Unicorn logger will write to stderr.
-# Additionally, some applications/frameworks log to stderr or stdout,
-# so prevent them from going to /dev/null when daemonized here:
-stderr_path "/home/git/gitlab/log/unicorn.stderr.log"
-stdout_path "/home/git/gitlab/log/unicorn.stdout.log"
+timeout ENV.fetch('UNICORN_TIMEOUT', 60).to_i
 
 # combine Ruby 2.0.0dev or REE with "preload_app true" for memory savings
 # http://rubyenterpriseedition.com/faq.html#adapt_apps_for_cow
@@ -87,23 +73,6 @@ before_fork do |server, worker|
   defined?(ActiveRecord::Base) and
     ActiveRecord::Base.connection.disconnect!
 
-  # The following is only recommended for memory/DB-constrained
-  # installations.  It is not needed if your system can house
-  # twice as many worker_processes as you have configured.
-  #
-  # This allows a new master process to incrementally
-  # phase out the old master process with SIGTTOU to avoid a
-  # thundering herd (especially in the "preload_app false" case)
-  # when doing a transparent upgrade.  The last worker spawned
-  # will then kill off the old master process with a SIGQUIT.
-  old_pid = "#{server.config[:pid]}.oldbin"
-  if old_pid != server.pid
-    begin
-      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
-      Process.kill(sig, File.read(old_pid).to_i)
-    rescue Errno::ENOENT, Errno::ESRCH
-    end
-  end
   #
   # Throttle the master from forking too quickly by sleeping.  Due
   # to the implementation of standard Unix signal handlers, this
