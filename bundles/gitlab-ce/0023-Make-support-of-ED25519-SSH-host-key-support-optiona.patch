From 9a7f7dc70dd452868ac7302dc4f549df40febadb Mon Sep 17 00:00:00 2001
From: Jakub Jirutka <jakub@jirutka.cz>
Date: Wed, 14 Mar 2018 16:55:51 +0100
Subject: [PATCH 23/25] Make support of ED25519 SSH host key support optional

---
 app/models/application_setting.rb | 2 +-
 lib/gitlab/ssh_public_key.rb      | 5 +++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/app/models/application_setting.rb b/app/models/application_setting.rb
index eada313..0044738 100644
--- a/app/models/application_setting.rb
+++ b/app/models/application_setting.rb
@@ -16,7 +16,7 @@ class ApplicationSetting < ActiveRecord::Base
   # Setting a key restriction to `-1` means that all keys of this type are
   # forbidden.
   FORBIDDEN_KEY_VALUE = KeyRestrictionValidator::FORBIDDEN
-  SUPPORTED_KEY_TYPES = %i[rsa dsa ecdsa ed25519].freeze
+  SUPPORTED_KEY_TYPES = Gitlab::SSHPublicKey::Technologies.map(&:name).freeze
 
   serialize :restricted_visibility_levels # rubocop:disable Cop/ActiveRecordSerialize
   serialize :import_sources # rubocop:disable Cop/ActiveRecordSerialize
diff --git a/lib/gitlab/ssh_public_key.rb b/lib/gitlab/ssh_public_key.rb
index 89ca129..54f892b 100644
--- a/lib/gitlab/ssh_public_key.rb
+++ b/lib/gitlab/ssh_public_key.rb
@@ -6,8 +6,9 @@ module Gitlab
       Technology.new(:rsa, OpenSSL::PKey::RSA, [1024, 2048, 3072, 4096]),
       Technology.new(:dsa, OpenSSL::PKey::DSA, [1024, 2048, 3072]),
       Technology.new(:ecdsa, OpenSSL::PKey::EC, [256, 384, 521]),
-      Technology.new(:ed25519, Net::SSH::Authentication::ED25519::PubKey, [256])
-    ].freeze
+      (Technology.new(:ed25519, Net::SSH::Authentication::ED25519::PubKey, [256]) \
+        if defined? Net::SSH::Authentication::ED25519)
+    ].compact.freeze
 
     def self.technology(name)
       Technologies.find { |tech| tech.name.to_s == name.to_s }
-- 
2.10.1 (Apple Git-78)

