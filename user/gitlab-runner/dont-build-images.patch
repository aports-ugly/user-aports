--- a/Makefile
+++ b/Makefile
@@ -105,59 +105,17 @@
 	# Create directory
 	mkdir -p out/docker

-ifneq (, $(shell docker info))
-	# Building gitlab-runner-helper
-	gox -osarch=linux/amd64 \
-		-ldflags "$(GO_LDFLAGS)" \
-		-output="dockerfiles/build/gitlab-runner-helper" \
-		$(PKG)/apps/gitlab-runner-helper
-
-	# Build docker images
-	docker build -t gitlab/gitlab-runner-helper:x86_64-$(REVISION) -f dockerfiles/build/Dockerfile.x86_64 dockerfiles/build
-	-docker rm -f gitlab-runner-prebuilt-x86_64-$(REVISION)
-	docker create --name=gitlab-runner-prebuilt-x86_64-$(REVISION) gitlab/gitlab-runner-helper:x86_64-$(REVISION) /bin/sh
-	docker export -o out/docker/prebuilt-x86_64.tar gitlab-runner-prebuilt-x86_64-$(REVISION)
-	docker rm -f gitlab-runner-prebuilt-x86_64-$(REVISION)
-	xz -f -9 out/docker/prebuilt-x86_64.tar
-else
-	$(warning =============================================)
-	$(warning WARNING: downloading prebuilt docker images that will be embedded in gitlab-runner)
-	$(warning WARNING: to use images compiled from your code install Docker Engine)
-	$(warning WARNING: and remove out/docker/prebuilt-x86_64.tar.xz)
-	$(warning =============================================)
-	curl -o out/docker/prebuilt-x86_64.tar.xz \
-		https://gitlab-runner-downloads.s3.amazonaws.com/master/docker/prebuilt-x86_64.tar.xz
-endif
-
 out/docker/prebuilt-arm.tar.xz: $(GO_FILES) $(GOX)
 	# Create directory
 	mkdir -p out/docker

-ifneq (, $(shell docker info))
+dockerfiles/build/gitlab-runner-helper: $(GOPATH_SETUP)
 	# Building gitlab-runner-helper
-	gox -osarch=linux/arm \
-		-ldflags "$(GO_LDFLAGS)" \
-		-output="dockerfiles/build/gitlab-runner-helper" \
+	go build -v -ldflags "$(GO_LDFLAGS)" \
+		-o "dockerfiles/build/gitlab-runner-helper" \
 		$(PKG)/apps/gitlab-runner-helper

-	# Build docker images
-	docker build -t gitlab/gitlab-runner-helper:arm-$(REVISION) -f dockerfiles/build/Dockerfile.arm dockerfiles/build
-	-docker rm -f gitlab-runner-prebuilt-arm-$(REVISION)
-	docker create --name=gitlab-runner-prebuilt-arm-$(REVISION) gitlab/gitlab-runner-helper:arm-$(REVISION) /bin/sh
-	docker export -o out/docker/prebuilt-arm.tar gitlab-runner-prebuilt-arm-$(REVISION)
-	docker rm -f gitlab-runner-prebuilt-arm-$(REVISION)
-	xz -f -9 out/docker/prebuilt-arm.tar
-else
-	$(warning =============================================)
-	$(warning WARNING: downloading prebuilt docker images that will be embedded in gitlab-runner)
-	$(warning WARNING: to use images compiled from your code install Docker Engine)
-	$(warning WARNING: and remove out/docker/prebuilt-arm.tar.xz)
-	$(warning =============================================)
-	curl -o out/docker/prebuilt-arm.tar.xz \
-		https://gitlab-runner-downloads.s3.amazonaws.com/master/docker/prebuilt-arm.tar.xz
-endif
-
-executors/docker/bindata.go: out/docker/prebuilt-x86_64.tar.xz out/docker/prebuilt-arm.tar.xz $(GOBINDATA)
+executors/docker/bindata.go: $(GOBINDATA)
 	# Generating embedded data
 	go-bindata \
 		-pkg docker \
@@ -186,7 +144,7 @@
 		-o "out/binaries/$(NAME)" \
 		$(PKG)

-build_current: executors/docker/bindata.go build_simple
+build_current: executors/docker/bindata.go build_simple dockerfiles/build/gitlab-runner-helper

 check_race_conditions: executors/docker/bindata.go
 	@./scripts/check_race_conditions $(OUR_PACKAGES)
