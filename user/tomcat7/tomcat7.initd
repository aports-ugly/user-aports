#!/sbin/openrc-run

catalina_home="/usr/share/java/tomcat7"

: ${user:="tomcat"}
: ${confdir:="/etc/$RC_SVCNAME"}
: ${logdir:="/var/log/$RC_SVCNAME"}
: ${tmpdir:="/tmp/$RC_SVCNAME"}

: ${server_protocol:="HTTP/1.1"}
: ${server_port:="8080"}
: ${server_bind_address:="0.0.0.0"}

: ${catalina_base:="/var/lib/$RC_SVCNAME"}
: ${catalina_opts:=}
: ${tomcat_logging_conf:="$catalina_home/conf/logging.properties"}
: ${tomcat_start:="start"}

: ${jmx_ssl:="enable"}
: ${jmx_access_file:=}
: ${jmx_passwd_file:=}
: ${rmi_hostname:=}

: ${jpda_transport:="dt_socket"}
: ${jpda_address:=8000}
: ${jpda_opts="-Xdebug -Xrunjdwp:transport=$jpda_transport,address=$jpda_address,server=y,suspend=n"}

: ${java_home:="/usr/lib/jvm/default-jvm"}
: ${java_properties:=}
: ${java_extra_classpath:=}
: ${java_opts:=}


extra_stopped_commands="setup"
extra_started_commands="forcestop"
description_forcestop="Send SIGKILL to Tomcat"
description_setup="Set up directories and default configs for this Tomcat instance"

command="$java_home/bin/java"
command_background="yes"

start_stop_daemon_args="
	--chdir $tmpdir
	--user $user"
pidfile="/run/$RC_SVCNAME.pid"
retry="SIGTERM/20"

required_dirs="$catalina_home $java_home"
required_files="$tomcat_logging_conf"


depend() {
	use net
	after postgresql
}

start_pre() {
	init_command_args || return 1

	local dir; for dir in "$catalina_base" "$confdir" "$logdir"; do
		if [ ! -d "$dir" ]; then
			eerror "Directory '$dir' does not exist!"
			eerror "Did you run 'rc-service $RC_SVCNAME setup'?"
			return 1
		fi
	done

	checkpath -d -m 0700 -o "$user" "$tmpdir"
}

forcestop() {
	ebegin "Stopping $name with force"

	start-stop-daemon --stop \
		--quiet --retry=60 \
		--pidfile $pidfile \
		--signal=9 \
		&& mark_service_stopped "$RC_SVCNAME"
	eend $?
}

setup() { (
	set -eu

	local group="$(id -gn "$user")"

	checkpath -d -m 755 -o "$user" "$catalina_base"
	checkpath -d -m 755 -o "$user" "$catalina_base"/webapps
	checkpath -d -m 700 -o "$user" "$catalina_base"/work
	checkpath -d -m 750 -o "$user" "$logdir"
	checkpath -d -m 755 -o "root" "$confdir" "$confdir"/Catalina
	checkpath -d -m 750 -o "root:$group" "$confdir"/Catalina/localhost

	if [ ! -e "$catalina_base"/conf ]; then
		einfo "Symlinking $confdir to $catalina_base/conf"
		ln -s "$confdir" "$catalina_base"/conf
	fi

	if [ ! -e "$catalina_base"/logs ]; then
		einfo "Symlinking $logdir to $catalina_base/logs"
		ln -s "$logdir" "$catalina_base"/logs
	fi

	local file; for file in server.xml web.xml; do
		if [ ! -e "$confdir"/$file ]; then
			einfo "Symlinking default $file to $confdir"
			ln -s "$catalina_home"/conf/$file "$confdir"/$file
		fi
	done
) }


init_command_args() {
	local java_opts="$java_opts"

	java_opts="
		-server
		${java_heap_size:+" -Xms${java_heap_size}M -Xmx${java_heap_size}M"}
		${java_new_ratio:+" -XX:NewRatio=$java_new_ratio"}
		-Dfile.encoding=utf-8
		$java_opts"

	# Force to use /dev/urandom instead of /dev/random for faster start-up
	# See http://wiki.apache.org/tomcat/HowTo/FasterStartUp#Entropy_Source
	java_opts="$java_opts
		-Djava.security.egd=file:/dev/./urandom"

	if [ "$tomcat_start" = "-security start" ]; then
		local _policy="$(first_valid_path "$catalina_base/catalina.policy" \
		                                  "$catalina_home/conf/catalina.policy")"
		java_opts="$java_opts
			-Djava.security.manager
			-Djava.security.policy=$_policy"
	fi
	if [ "$tomcat_start" = "jpda start" ]; then
		java_opts="$java_opts $jpda_opts"
	fi

	java_opts="$java_opts
		-Dcatalina.base=$catalina_base
		-Dcatalina.home=$catalina_home
		-Djava.io.tmpdir=$tmpdir
		-Dlogging.path=$logdir
		-Dserver.protocol=$server_protocol
		-Dserver.port=$server_port
		-Dserver.address=$server_bind_address
		-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
		-Djava.util.logging.config.file=$tomcat_logging_conf"

	local _config="$(first_valid_path "$catalina_base/catalina.properties" \
	                                  "$catalina_home/conf/catalina.properties")"
	java_opts="$java_opts -Dcatalina.config=$_config"

	if [ "$jmx_ssl" = 'disable' ]; then
		java_opts="$java_opts -Dcom.sun.management.jmxremote.ssl=false"
	fi
	if [ -r "$jmx_passwd_file" ]; then
		java_opts="$java_opts -Dcom.sun.management.jmxremote.password.file=$jmx_passwd_file"
	fi
	if [ -r "$jmx_access_file" ]; then
		java_opts="$java_opts -Dcom.sun.management.jmxremote.access.file=$jmx_access_file"
	fi
	if [ -n "$rmi_hostname" ]; then
		java_opts="$java_opts -Djava.rmi.server.hostname=$rmi_hostname"
	fi

	local item; for item in $java_properties; do
		java_opts="$java_opts -D$item"
	done

	local cp="$catalina_home/bin/bootstrap.jar:$catalina_home/bin/tomcat-juli.jar"
	cp="$cp:$catalina_home/lib${java_extra_classpath:+":$java_extra_classpath"}"

	command_args="$java_opts
		-classpath $cp
		org.apache.catalina.startup.Bootstrap
		$catalina_opts
		$tomcat_start"

	if yesno "$EINFO_VERBOSE"; then
		einfo "Command: $command $(printf '%s\n' $command_args)"
	fi
}

first_valid_path() {
	local path; for path in "$@"; do
		if [ -e "$path" ]; then
			printf '%s\n' "$path"
			break
		fi
	done
	return 1
}
